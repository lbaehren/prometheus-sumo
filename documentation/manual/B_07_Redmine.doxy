/*!

  \page refman_redmine Redmine

  \tableofcontents

  \section redmine_overview Overview

  \b Redmine is a free and open source, web-based project management and
  bug-tracking tool. It includes a calendar and Gantt charts to aid visual
  representation of projects and their deadlines. It handles multiple projects.
  Redmine provides integrated project management features, issue tracking, and
  for multiple version control options.

  The design of Redmine is significantly influenced by Trac, a software package
  with some similar features.

  Redmine is written using the Ruby on Rails framework. It is cross-platform and
  cross-database. It is part of the Bitnami app library that provides an
  installer and virtual machine for ease of deployment.

  Redmine is open source and released under the terms of the GNU General Public
  License v2 (GPL).

  \section redmine_install Installation

  \subsection redmine_install_requirements Requirements

  \subsubsection redmine_install_requirements_os Operating system

  Redmine should run on most Unix, Linux, [Mac](http://www.redmine.org/projects/redmine/wiki/RedmineInstallOSX), Mac Server and Windows systems as long as Ruby is available on this platform. See specific installation HowTos [here](http://www.redmine.org/projects/redmine/wiki/HowTos).

  \subsubsection redmine_install_requirements_db Database

* \ref refman_mysql 5.0 or higher (recommended)
  * make sure to install the C bindings for Ruby that dramatically improve performance. You can get them by running gem install mysql2. If you have problem installing the mysql gem refer Rails Wiki pages

* PostgreSQL 8 or higher
  * make sure your database datestyle is set to ISO (PostgreSQL default setting). You can set it using: ``ALTER DATABASE "redmine_db" SET datestyle="ISO,MDY";``
  * some bugs in PostgreSQL 8.4.0 and 8.4.1 affect Redmine behavior (#4259, #4314), they are fixed in PostgreSQL 8.4.2

* SQLite 3

  \subsubsection redmine_install_requirements_version Redmine Version

It is recommended that the majority of users install the proper point releases of
redmine. Redmine currently releases a new version every 6 months, and these
releases are considered very usable and stable. It is not recommended to install
redmine from trunk, unless you are deeply familiar with \ref refman_rails
and keep up with the changes - Trunk does break from time-to-time.

  \subsection redmine_install_osx  ... on Mac OS X

  \subsection redmine_install_debian ... on Debian GNU/Linux

  A redmine debian package is available in _squeeze_, _sid_ and _lenny-backports_, featuring:

  \li automatic database configuration,
  \li multiple instances support.
  \li The core package is redmine.
  \li Three packages (``redmine-*``) provide correct dependencies for mysql, pgsql, sqlite.
  \li Several configurations are given as working examples in : ``/usr/share/doc/redmine/examples``
  \li Explanations of how the configuration is dealt with are given in : ``/usr/share/doc/redmine/README.Debian.gz``

There is no per-instance support for plugins, but those dropped to : ``/usr/share/redmine/vendor/plugins`` should be ok. The ``migrate_plugins`` task is called upon each (re)configuration or upgrade. Since custom plugins are often bound to a specific redmine version, it is advised to remove them before upgrades.

  \subsubsection redmine_install_debian_packages Required packages

  Install the necessary packages:

  \verbatim
  apt-get install libapache2-mod-passenger
  apt-get install mysql-server
  apt-get install redmine-mysql
  apt-get install redmine
  \endverbatim

  \subsubsection redmine_install_debian_files Organization of files and directories

  After installation, files and directories are distributed as follows:

  \verbatim
  /etc
  |-- redmine/                   ...  Configuration files (redmine/config)
  |   `-- default
  |       |-- database.yml
  |       `-- session.yml
  |-- usr
  |   `--share
  |      |-- doc
  |      |   `-- redmine
  |      |       `-- examples    ...  Example configuration files
  |      `-- redmine             ...  Root directory of the application
  `-- var
      |-- cache
      |   `-- redmine
      |-- lib
      |   `-- redmine
      |-- log
      |   `-- redmine
      |-- run
      |   `-- redmine
      `-- redmine
  \endverbatim

  \subsection redmine_install_plugins Plugins

  \subsubsection redmine_plugins_roadmap Advanced Roadmap

  Installation steps:

  \li Download last version from \c /redmine/projects/advanced-roadmap/files.
  \li Unzip on your Redmine folder \c /vendor/plugins.
  \li Rename the folder from \c advanced_roadmap_x.y.z to \c advanced_roadmap.
  \li Into the Redmine root folder migrate plugins:
  \code
  rake db:migrate:plugins
  \endcode
  \li Restart your Redmine installation.

  The Advanced roadmap for Redmine is a plugin that allows to:

  \li Show more information into the Roadmap view:
     - A total for the roadmap is displayed, so you can easily check the whole project status.
     - Each version has more info about the completion and due times, being these pourcentage values calculated not with the default count of issues, but with the issues duration and completion pourcentages.
     - The issues of the versions are shown as a table instead as a list, with more information about the time (completed and due) with real status calculated based on the duration, the current completion pourcentage and the consequent estimation of the due time. These issues are printed with color (red: the task is over due, orange: over due but not so bad as red, black: normal, green: the issue is been solved faster than the estimation).
  \li You can define milestones for a project, and attach versions to the milestones (from this or other projects):
     - Milestones are edited on the project Settings tab (create, edit (associate versions to them) and delete).
     - Milestone information is shown into the Roadmap view, above the Version list, into a Milestone list. When a milestone view is clicked a view similar to Roadmap is shown, but instead of showing the project versions list, a list of the milestone versions list is shown.

  \subsubsection redmine_plguins_github GitHub Hook

  According to the various articles and help pages available online, there do
  exist two main routes for integrating a Git repository as part of a project
  tarcked through Redmine:

  <ol>
    <li>Create a \b local and \b bare Git repository and update its contents
    via a cronjob.
    <li>Create a \b local and \b bare Git repository and update its contents
    by placing a \c post-commit hook into the project's repository.
  </ol>

  While the first of the two methods is rather straight forward, getting the
  latter to work properly turns out to be a bit more work:

  <ol>
    <li>Install the [GitHub Hook plugin](http://www.redmine.org/plugins/redmine_github_hook),
    it works with Redmine 1.2.1 too

    <li>In Redmine, go to Administration/Settings and click on the Repository tab

    \li Enable Git as SCM.
    \li Select "auto-fetch commits"
    \li Click on "Enable WS for repository management", generate an API key and copy it, we'll need it in a few minutes.
    \li Click "Save".

   <li>Now, you have to create a local repository on the machine Redmine is installed

     \li Use specifically the command \code git clone --mirror [repo_url] \endcode
     \li Pay attention to the fact that Redmine needs read permissions on this folder.
     \li Then go into your projects settings, in the "repository tab". Select "Git" as SCM, and fill the absolute path to the local repository you created just above.

  <li>Finally go to GitHub

    \li Select your repository and click on "Admin".
    \li Click on the "Service Hooks" tab and select Redmine in the list.
    \li Scroll up to fill needed information, don't forget the API Key we generated earlier. For instance, if your project url is http://redmine.mydomain.com/projects/my_project:
    \verbatim
    Adress = http://redmine.mydomain.com
    Project = my_project
    API Key = the API key we got from Redmine
    \endverbatim
    \li Click "Update Settings" and you are done!
  </ol>

  \section redmine_configuration Configuration

  \subsection redmine_configuration_projects Projects

  \subsection redmine_configuration_modules Modules

  Disabling a module doesn't delete the associated data. It only prevents users
  from accessing it. After a module was disabled, it can be re-enabled with all
  its data.

  You can for example disable 'Issue tracking' module for a single project.
  Existing issues are not deleted. You will be able to access them if you re-enable
  the module.

  Redmine provides the following code modules:


  | Module | Description            |
  |--------|------------------------|
  | Issue tracking | provides [Issue tracking](http://www.redmine.org/projects/redmine/wiki/RedmineIssues) feature, including issue categories, versions, the [Roadmap](http://www.redmine.org/projects/redmine/wiki/RedmineRoadmap) and version overviews |
  | Time tracking | provides Time tracking feature |
  | News | provides News feature |
  | Documents | provides Documents feature |
  | Files | provides Files feature |
  | Wiki | provides Wiki feature |
  | Repository | provides Repository feature |
  | Boards | provides Forum feature |
  | Calendar | provides Calendar feature |
  | Gantt  | provides Gantt feature |

  Additional modules can be added to the system using Redmine plugins.
  \ref redmine_install_plugins can only be installed by the administrator.

  \section redmine_usage Usage
  
  \subsection redmine_usage_issues Issues page

  As long as the module "Issue Tracking" is enabled for a project (which it is
  by default), the row of tabs will contain an entry \b Issues; clicking on the
  tab will reveal the page shown below.

  \image html Redmine__Issues_Overview.png
  \image latex Redmine__Issues_Overview.png "Project overview page" width=.9\textwidth

  \image html Redmine__Issues_display_options.png
  \image latex Redmine__Issues_display_options.png "User selectable options for displaying the list of issues being tracked." width=.9\textwidth

  \subsection redmine_usage_activity Activity overview

  \image html Redmine__Activity_overview.png
  \image latex Redmine__Activity_overview.png "Overview on recent activities (including sub-projects)" width=.9\textwidth

  \section redmine_references References

  \li [redmine.org](http://www.redmine.org) - Project homepage
  \li [Installing Redmine](http://www.redmine.org/projects/redmine/wiki/RedmineInstall)
  \li [Redmine Github Hook plugin](https://github.com/koppen/redmine_github_hook)

*/