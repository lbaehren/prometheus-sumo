/*!
  \page homepage Homepage

  \tableofcontents

  \section homepage_overview Overview

  In order to keep the amount of processing needed behind the scenes in order to
  deliver the contents of the website to a minimum, all the pages are served as
  \a static pages.

  The [sources of our website](https://github.com/prometheus-ev/promhp) are
  living in a Git repository, from which they can be cloned directly (see 
  section \ref homepage_code below) or through a tool called
  [Jekyll Commander](https://github.com/prometheus-ev/JekyllCommander), which
  also generates previews for the changes.

  \section homepage_code Getting the source code
  
  The source code for the homepage is hosted on Github; depending on the access
  permission a working copy can be obtained through one of the following
  methods:

  \li Read/Write access
  \verbatim
  git clone git@github.com:prometheus-ev/promhp.git promhp
  \endverbatim
  \li Read-only access
  \verbatim
  git clone git://github.com/prometheus-ev/promhp.git promhp
  \endverbatim

  \section homepage_structure Organization of the source code

  After checkout out a working copy from the repository hosted on Github,
  the following directory structure can be found on disk:

  \verbatim
  .
  |-- _config
  |-- _includes
  |   `-- series
  |-- _layouts
  |-- _lib
  |-- _plugins
  |-- _posts
  |-- about
  |   |-- association
  |   |-- jobs
  |   `-- tagung2011
  |-- blog
  |-- databases
  |-- faq
  |-- files
  |   |-- blog
  |   |-- icons
  |   |-- images
  |   |-- media
  |   |-- modules
  |   `-- text
  |-- images
  |-- inc
  |-- javascripts
  |-- license
  |-- projects
  |-- prometheus
  |   |-- newsletter
  |   `-- publications
  |-- series                            ...  Image series
  |-- stylesheets
  `-- tools
  \endverbatim

  \li The \c images subdirectory contains (small) images used as part of the
  page layout and its navigation elements:
  \verbatim
  .
  `-- images/
      |-- icon
      |-- misc
      `-- sidebar
  \endverbatim

  \li Configuration settings of and postings to the Blog are split across two
  directories: while rendering settings are stored in \c blog, the actual
  blog entries are collected in \c _posts.
  \verbatim
  .
  |-- _posts
  `-- blog
  \endverbatim

  \li Stylesheets for the various representations/renderings of the homepage
  are collected within the \c styleheets directory:
  \verbatim
  .
  `-- stylesheets/
      |-- application.css
      |-- application_ie.css
      |-- application_ie7.css
      |-- mobile.css
      |-- noscript.css
      |-- print.css
      |-- screen.css
      `-- syntax.css
  \endverbatim

  \li Configuration files for Jekyll - the tool used to build the static HTML
  pages - can be found in \c _config.

  \li The directory \c series contains data - images and descriptions - for the 
  image series featured on the homepage.
  \verbatim
  .
  `-- series/
      |-- 2010
      |-- 2011
      `-- 2012
  \endverbatim

  \section homepage_editing Editing the homepage

  Editing the contents (i.e. the pages) of the website can be done in two different
  ways:

  \li Editing the files within the local working copy obtained from the code
  repository.

  \li Modifying files through the [Jekyll Commander](https://github.com/prometheus-ev/JekyllCommander), a Sinatra based web interface, to maintain a Jekyll website, including Git version control.

  While the first of the two methods - w.r.t. the editing of the source files -
  is no different from any other source code working copy, the resulting static
  webpages need to be generated locally as, in order to verify the changes.

  \subsection homepage_editing_manual ... manually

  \li Check out a working copy of the source files, as described in section
  \ref homepage_code above.
  
  \li Make the changes you would like to make, using your favorite text editor.

  \li Preview the result of your changes, following the procedure described in
  section \ref homepage_build below.

  \li If the result ok -- possibly after iterating through the previous two
  points a number of times -- you can check in your changes
  \code
  git add <files>
  git commit -m <commit message>
  \endcode
  and push them back to the repository on Github.

  \subsection homepage_editing_command ... using the Jekyll Commander

  Starting up the [Jekyll Commander](http://prometheus-app.uni-koeln.de/promhp)
  it will take a few seconds before the interface is initialized for usage; the
  for this is, that in the background a working copy of the source code is being
  updated, such that changes can be submitted once they have been carried out.
  
  \image html promhp__Jekyll_Commander.png
  \image latex promhp__Jekyll_Commander.png "Start page of the Jekyll Commander" width=.9\textwidth

  If you want to edit a specific page, use the navigation panel to the left in
  order to select it.; clicking on the filename will open up the file contents
  in an embedded editor:

  \image html promhp__Edit_page.png
  \image latex promhp__Edit_page.png "Editing a page within Jekyll Commander" width=.9\textwidth

  All changes an user made will be merged into a staging version of the website
  when he/she decides that everything is done so far. This staging repo, which
  has its own preview, combines the commits of all user.

  \image html promhp__Safe_changes.png
  \image latex promhp__Safe_changes.png "Saving changes" width=.9\textwidth

  Once the changes have have been saved, a preview can be rendered, such that is
  possible to inspect the outcome; since this signifies that (most of the time)
  the complete website needs to be regenerated, this process might take a while.

  \image html promhp__Site_update.png

  And at one point, in the case that everything is alright, it can go public. This
  means (in the background) that all changes will be pushed to the live repo.
  In our case this (or rather pushing a tag) triggers the system to generate the
  webside and move it into the document root of our webserver. There are our
  scripts in the "example" folder for a better understanding.

  \image html promhp__Publish_site.png
  \image latex promhp__Publish_site.png "Publish the changes to the website." width=.9\textwidth

  \section homepage_build Building the website

  \subsection homepage_build_pre Prerequisites
  
  \li \b Pygments aims to be a generic syntax highlighter for general use in all
  kinds of software such as forum systems, wikis or other applications that need
  to prettify source code. You can check if the command-line tool is available
  via
  \verbatim
  which pygmentize
  \endverbatim
  If the result turns out to be empty, there are at least two routes to install
  the tool:
  - Using Ruby Gems, where [pygmentize](https://github.com/djanowski/pygmentize)
  provides a standalone Pygments for Ruby
  \code
  gem install pygmentize
  \endcode
  - Using the system's package manager (e.g. \c apt-get on
  [Debian GNU/Linux](http://www.debian.org))
  \code
  apt-get install python-pygments
  \endcode
  
  \subsection homepage_build_tasks Rake tasks

  Building the website from the sources files is controlled through a number of
  Rake tasks; in order to get a list of the available tasks run
  \code
  rake -T
  \endcode
  Available tasks are:
  | Task                | Description |
  |---------------------|-------------|
  | rake build          | Build the site |
  | rake clean          | Remove current site |
  | rake live           | Run following tasks in live environment |
  | rake series_preview | Build preview for start page with NUM's (yyyy/ww) image series |
  | rake setup          | Set up build environment |
  | rake staging        | Run following tasks in staging environment |
  | rake tag            | Tag release |

  To build the website from the sources, run
  \verbatim
  rake setup
  rake build
  \endverbatim
  Unless defined otherwise, the generated site will be placed into the \c _site
  directory
  \verbatim
  .
  `-- _site/
      |-- about
      |-- blog
      |-- databases
      |-- files
      |-- images
      |-- inc
      |-- javascripts
      |-- license
      |-- page2
      |-- page3
      |-- page4
      |-- page5
      |-- page6
      |-- projects
      |-- prometheus
      |-- series
      |-- stylesheets
      |-- tag
      `-- tools
  \endverbatim

*/

