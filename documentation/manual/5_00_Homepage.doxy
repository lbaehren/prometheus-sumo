/*!
  \page homepage Homepage

  \tableofcontents

  \section homepage_code Getting the source code
  
  The source code for the homepage is hosted on Github; depending on the access
  permission a working copy can be obtained through one of the following
  methods:

  \li Read/Write access
  \verbatim
  git clone git@github.com:prometheus-ev/promhp.git promhp
  \endverbatim
  \li Read-only access
  \verbatim
  git clone git://github.com/prometheus-ev/promhp.git promhp
  \endverbatim

  \section homepage_structure Organization of the source code

  After checkout out a working copy from the repository hosted on Github,
  the following directory structure can be found on disk:

  \verbatim
  .
  |-- _config
  |-- _includes
  |   `-- series
  |-- _layouts
  |-- _lib
  |-- _plugins
  |-- _posts
  |-- about
  |   |-- association
  |   |-- jobs
  |   `-- tagung2011
  |-- blog
  |-- databases
  |-- faq
  |-- files
  |   |-- blog
  |   |-- icons
  |   |-- images
  |   |-- media
  |   |-- modules
  |   `-- text
  |-- images
  |-- inc
  |-- javascripts
  |-- license
  |-- projects
  |-- prometheus
  |   |-- newsletter
  |   `-- publications
  |-- series                            ...  Image series
  |-- stylesheets
  `-- tools
  \endverbatim

  \li The \c images subdirectory contains (small) images used as part of the
  page layout and its navigation elements:
  \verbatim
  .
  `-- images/
      |-- icon
      |-- misc
      `-- sidebar
  \endverbatim

  \li Configuration settings of and postings to the Blog are split across two
  directories: while rendering settings are stored in \c blog, the actual
  blog entries are collected in \c _posts.
  \verbatim
  .
  |-- _posts
  `-- blog
  \endverbatim

  \li Stylesheets for the various representations/renderings of the homepage
  are collected within the \c styleheets directory:
  \verbatim
  .
  `-- stylesheets/
      |-- application.css
      |-- application_ie.css
      |-- application_ie7.css
      |-- mobile.css
      |-- noscript.css
      |-- print.css
      |-- screen.css
      `-- syntax.css
  \endverbatim

  \li Configuration files for Jekyll - the tool used to build the static HTML
  pages - can be found in \c _config.

  \li The directory \c series contains data - images and descriptions - for the 
  image series featured on the homepage.
  \verbatim
  .
  `-- series/
      |-- 2010
      |-- 2011
      `-- 2012
  \endverbatim

  \section homepage_editing Editing the homepage

  Editing the contents (i.e. the pages) of the website can be done in two different
  ways:

  \li Editing the files within the local working copy obtained from the code
  repository.

  \li Modifying files through the [Jekyll Commander](http://prometheus-app.uni-koeln.de/promhp), a Sinatra based web interface, to maintain a Jekyll website, including Git version control.

  While the first of the two methods - w.r.t. the editing of the source files -
  is no different from any other source code working copy, the resulting static
  webpages need to be generated locally as, in order to verify the changes.

  \image html "promhp - Jekyll Commander.png"

  \section homepage_build Building the website

  \subsection homepage_build_pre Prerequisites
  
  \li \b Pygments aims to be a generic syntax highlighter for general use in all
  kinds of software such as forum systems, wikis or other applications that need
  to prettify source code. You can check if the command-line tool is available
  via
  \verbatim
  which pygmentize
  \endverbatim
  If the result turns out to be empty, there are at least two routes to install
  the tool:
  - Using Ruby Gems, where [pygmentize](https://github.com/djanowski/pygmentize)
  provides a standalone Pygments for Ruby
  \code
  gem install pygmentize
  \endcode
  - Using the system's package manager (e.g. \c apt-get on
  [Debian GNU/Linux](http://www.debian.org))
  \code
  apt-get install python-pygments
  \endcode
  
  \subsection homepage_build_tasks Rake tasks

  Building the website from the sources files is controlled through a number of
  Rake tasks; in order to get a list of the available tasks run
  \code
  rake -T
  \endcode
  Available tasks are:
  | Task                | Description |
  |---------------------|-------------|
  | rake build          | Build the site |
  | rake clean          | Remove current site |
  | rake live           | Run following tasks in live environment |
  | rake series_preview | Build preview for start page with NUM's (yyyy/ww) image series |
  | rake setup          | Set up build environment |
  | rake staging        | Run following tasks in staging environment |
  | rake tag            | Tag release |

  To build the website from the sources, run
  \verbatim
  rake setup
  rake build
  \endverbatim
  Unless defined otherwise, the generated site will be placed into the \c _site
  directory
  \verbatim
  .
  `-- _site/
      |-- about
      |-- blog
      |-- databases
      |-- files
      |-- images
      |-- inc
      |-- javascripts
      |-- license
      |-- page2
      |-- page3
      |-- page4
      |-- page5
      |-- page6
      |-- projects
      |-- prometheus
      |-- series
      |-- stylesheets
      |-- tag
      `-- tools
  \endverbatim

*/

