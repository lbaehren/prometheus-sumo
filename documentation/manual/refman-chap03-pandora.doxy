/*!
  \page manual_pandora pandora

  \tableofcontents

  \section refman_pandora_intro Introduction

  [pandora](http://prometheus.uni-koeln.de/pandora/en/about) (The prometheus digital image archive software) is the successor to kleio as the driving force behind the prometheus image archive. It's being developed since late fall of 2006, on top of the [Ruby on Rails](http://rubyonrails.org) framework. pandora is Free Software, released under the terms of the [GNU Affero General Public License](http://www.gnu.org/licenses/#AGPL).


  \section refman_pandora_architecture Architectural Fundamentals


  \section refman_pandora_checkout Checking out the source code

  The source code of _pandora_ is hosted in a central 
  [Subversion](http://subversion.apache.org) repository at

  \li http://prometheus-srv.uni-koeln.de/svn/pandora

  \subsection refman_pandora_checkout_svn ... using Subversion

  Checking out a full working copy from the Subversion repository

  \verbatim
  svn co http://prometheus-srv.uni-koeln.de/svn/pandora pandora
  \endverbatim

  will create a directory structure like this:

  \verbatim
    pandora
    |
    |-- branches
    |   |-- 0.1-stable
    |   |-- 0.2-stable
    |   |-- 0.3-stable
    |   |-- 0.4-stable
    |   |-- 0.5-stable
    |   |-- 0.6-stable
    |   `-- restructuring_models_search_and_everything
    |-- tags
    |   |-- 0.1.0
    |   |-- 0.1.1
    |   |-- 0.1.2
    |   |-- ...
    |   `-- 0.6.5
    `-- trunk
        |-- app
        |-- config
        |-- db
        |-- doc
        |-- index
        |-- ...
  \endverbatim

  \subsection refman_pandora_checkout_git ... using Git

  If at a later point in time you want to be able to create new (release) branches
  and tags then accordingly, you will have to clone from the top-level of the 
  Subversion repository, telling [Git](http://git-scm.com) import from a standard
  directory layout: 

  \verbatim
  git svn clone -s http://prometheus-srv.uni-koeln.de/svn/pandora pandora
  \endverbatim

  The resulting directory structure will look something like this:

  \verbatim
    pandora/.git
    |-- hooks
    |-- info
    |-- logs
    |   `-- refs
    |       |-- heads
    |       `-- remotes
    |           `-- tags
    |-- objects
    |-- refs
    |   |-- heads
    |   |-- remotes
    |   |   `-- tags
    |   `-- tags
    `-- svn
        `-- refs
            `-- remotes
                |-- 0.1-stable
                |-- 0.2-stable
                |-- 0.3-stable
                |-- 0.4-stable
                |-- 0.5-stable
                |-- 0.6-stable
                |-- git-svn
                |-- restructuring_models_search_and_everything
                |-- tags
                |   |-- 0.1.0
                |   |-- 0.1.1
                |   |-- 0.1.2
                |   |...
                |   `-- 0.6.5
                `-- trunk
  \endverbatim

  \section refman_pandora_install_devel Installation of a development system

  The installation/configuration of a new development system/environment entails
  a number of steps:

  \li Install required system packages
  \li Install Ruby gems
  \li Check out working copy of the source code
  \li Start up pandora

  The sections below explain in further detail what needs do be done at each of the
  steps along the way. If you are more interesting in learning about
  {file:Testing Testing}, please visit the separate page on that topic.


  \section refman_pandora_release Deploying a new release version

  \subsection refman_pandora_release_tagging Tagging the release version

  Once the version number has been adjusted, it is time to create a new tagged
  version of the code base:

  \verbatim
  $ svn copy ^/trunk ^/tags/0.6.5 -m "Tagging the pandora 0.6.5 release"  
  \endverbatim

  As of git v1.6.1 the creation of branches in the SVN repository is supported via

  \verbatim
  git svn branch
  \endverbatim

  with the additional options \c -m (Allows to specify the commit message) and
  \c -t (Create a tag by using the tags_subdir instead of the branches_subdir
  specified during git svn init):

  \verbatim
  git svn branch -t -m "Tagging the pandora 0.6.5 release" 0.6.5
  \endverbatim

*/