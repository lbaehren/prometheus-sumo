/***************************************************************************
 *   Copyright (C) 2012                                                    *
 *   Lars B"ahren (lbaehren@gmail.com)                                     *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

/*!
  \file ConfigSettings.h
  \ingroup prometheus
  \ingroup config
  \brief Common configuration settings
  \author Lars Baehren

  **Configuration summary:**

  \li **System configuration**
  | Parameter             | Value                     |
  |-----------------------|---------------------------|
  | Processor type        | ${CMAKE_SYSTEM_PROCESSOR} |
  | CMake executable      | ${CMAKE_COMMAND}          |
  | CMake version         | ${CMAKE_VERSION}          |
  | System name           | ${CMAKE_SYSTEM}           |
  | Operating system name | ${CMAKE_OS_NAME}          |
  | C++ compiler          | ${CMAKE_CXX_COMPILER}     |
  | C compiler            | ${CMAKE_C_COMPILER}       |
  | size(void*)           | ${CMAKE_SIZEOF_VOID_P}    |

  \li **Ruby configuration**
  | Parameter                 | Value                                  |
  |---------------------------|----------------------------------------|
  | Required version          | ${REQUIRED_VERSION_RUBY}               |
  | Ruby executable           | ${RUBY_EXECUTABLE} (${RUBY_VERSION})   |
  | Ruby library path         | ${RUBY_LIBRARY}                        |
  | Ruby include directory    | ${RUBY_INCLUDE_DIRS}                   |
  | Gem executable            | ${GEM_EXECUTABLE} (${GEM_VERSION})     |
  | Rake executable           | ${RAKE_EXECUTABLE} (${RAKE_VERSION})   |
  | Rant executable           | ${RANT_EXECUTABLE} (${RANT_VERSION})   |
  | Rails executable          | ${RAILS_EXECUTABLE} (${RAILS_VERSION}) |

*/

#ifndef CONFIG_SETTINGS_H
#define CONFIG_SETTINGS_H

// ==============================================================================
//
//  Package information
//
// ==============================================================================

//! Project name
#define PROJECT_NAME "${PROJECT_NAME}"

//! The full version of ${PROJECT_NAME} in major.minor.patch format.
#define PROJECT_VERSION       "${PROJECT_VERSION}"
//! ${PROJECT_NAME} major version
#define PROJECT_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}"
//! ${PROJECT_NAME} minor version
#define PROJECT_VERSION_MINOR "${PROJECT_VERSION_MINOR}"
//! ${PROJECT_NAME} patch version
#define PROJECT_VERSION_PATCH "${PROJECT_VERSION_PATCH}"

//! Installation location
#define CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}"

// ==============================================================================
//
//  System information
//
// ==============================================================================

//! The full version of CMake in major.minor.patch[.tweak[-id]] format.
#define CMAKE_VERSION "${CMAKE_VERSION}"
//! Name of system CMake is compiling for
#define CMAKE_SYSTEM  "${CMAKE_SYSTEM}"
//! Name of the operating system
#define CMAKE_OS_NAME "${CMAKE_OS_NAME}"

// ==============================================================================
//
//  External libraries & tools
//
// ==============================================================================

//! Build with Boost library support?
#cmakedefine WITH_BOOST
//! Is the Gem executable available?
#cmakedefine GEM_FOUND
//! Build with MySQL library support?
#cmakedefine WITH_MYSQL
//! Is the Rails application executable available?
#cmakedefine RAILS_FOUND
//! Is the Rake executable available?
#cmakedefine RAKE_FOUND
//! Build with TinyXML library support?
#cmakedefine WITH_TINYXML
//! Build with YAML-C++ library support?
#cmakedefine WITH_YAML
//! Build with YAZ++ library support?
#cmakedefine WITH_YAZPP

#ifdef WITH_YAZPP
//! YAZ++ library version
#define YAZPP_LIBRARY_VERSION "${YAZPP_VERSION}"
#include <yaz/options.h>
#include <yazpp/zoom.h>
#endif

#ifdef WITH_BOOST
#include <boost/algorithm/string/regex.hpp>
#include <boost/program_options.hpp>
#include <boost/regex.hpp>
#endif

#ifdef GEM_FOUND
//! Full path to the Gem executable
#define GEM_EXECUTABLE "${GEM_EXECUTABLE}"
//! Gem version
#define GEM_VERSION "${GEM_VERSION}"
#endif

#ifdef RAILS_FOUND
//! Rails version
#define RAILS_VERSION "${RAILS_VERSION}"
#endif

#ifdef RAKE_FOUND
//! Full path to the Rake executable
#define RAKE_EXECUTABLE "${RAKE_EXECUTABLE}"
//! Rake version
#define RAKE_VERSION "${RAKE_VERSION}"
#endif

// ==============================================================================
//
//  Function prototypes
//
// ==============================================================================

namespace prometheus {   //   namespace prometheus -- BEGIN

  //! Summary of configuration settings
  void configuration_summary (std::ostream &os);

}   //   namespace prometheus -- END


#endif
